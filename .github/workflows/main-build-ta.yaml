name: Build Strava TA
on: 
  push:
    branches:
      - develop

env:
  SPLUNK_APP_ID: 4755
  APP_NAME: 'TA-strava-for-splunk'
  SPLUNK_VER: '8.0,8.1'
  SPLUNK_VISIBILITY: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Cache pip
      uses: actions/cache@v2
      with:
        # This path is specific to Ubuntu
        path: ~/.cache/pip
        # Look to see if there is a cache hit for the corresponding requirements file
        key: ${{ runner.os }}-pip-${{ hashFiles('.ci/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      # Only check input_module_* files, other files in /bin are generated by Add-On Builder.
      run: | 
        pip install --upgrade pip
        pip install -r .ci/requirements.txt 
    # - name: Lint with pylint
    #   run: pylint ./bin/input_module_*.py --disable=broad-except,logging-fstring-interpolation,missing-module-docstring,line-too-long,too-many-locals,too-many-nested-blocks
    # - name: Bandit Security Test
    #   run: bandit -r ./bin/*.py
    - name: Build script
      run: .ci/build.sh
    # - name: Upload artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: TA-strava-for-splunk.tgz
    #     path: ./TA-strava-for-splunk.tgz
    #     retention-days: 5
    #- name: Splunk AppInspect Test
    #  run: |
    #    ls -lah
    #    wget --output-document splunk-appinspect.tar.gz https://download.splunk.com/misc/appinspect/splunk-appinspect-latest.tar.gz
    #    pip install splunk-appinspect.tar.gz 
    #    splunk-appinspect inspect ./TA-strava-for-splunk.tgz --mode precert --included-tags cloud
    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        # Optional, GitHub token
        #github_token: ${{secrets.GITHUB_TOKEN}}
        # Required, workflow file name or ID
        workflow: develop-build-ta.yml
        # Optional, the status or conclusion of a completed workflow to search for
        # Can be one of a workflow conclusion::
        # "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
        # Or a workflow status:
        # "completed", "in_progress", "queued"
        # Default: "completed,success"
        workflow_conclusion: success
        # Optional, will get head commit SHA
        #pr: ${{github.event.pull_request.number}}
        # Optional, no need to specify if PR is
        #commit: ${{github.event.pull_request.head.sha}}
        # Optional, will use the branch
        #branch: master
        # Optional, defaults to all types
        #event: push
        # Optional, will use specified workflow run
        #run_id: 1122334455
        # Optional, run number from the workflow
        #run_number: 34
        # Optional, uploaded artifact name,
        # will download all artifacts if not specified
        # and extract them in respective subdirectories
        # https://github.com/actions/download-artifact#download-all-artifacts
        #name: artifact_name
        # Optional, directory where to extract artifact
        #path: extract_here
        # Optional, defaults to current repo
        #repo: ${{github.repository}}
    - name: Show folder contents
      run: ls -lah
    - name: Deploy to Splunkbase
      env:
        SPLUNK_USR: ${{ secrets.SPLUNK_USR }}
        SPLUNK_PWD: ${{ secrets.SPLUNK_PWD }}
      run: |
        curl -u $SPLUNK_USR:$SPLUNK_PWD --request POST "https://splunkbase.splunk.com/api/v1/app/$SPLUNK_APP_ID/new_release/" -F "filename=$APP_NAME.tgz" -F "files[]=@$GITHUB_WORKSPACE/$APP_NAME.tgz" -F "splunk_versions=$SPLUNK_VER" -F "visibility=$SPLUNK_VISIBILITY"
        response=$(curl -X GET -u $SPLUNK_USR:$SPLUNK_PWD --url "https://api.splunk.com/2.0/rest/login/splunk" | jq -r '.data.token')
        curl -X POST -H "Authorization: bearer ${response}" -H "Cache-Control: no-cache" -F "app_package=@$APP_NAME.tgz" -F "included_tags=cloud" --url "https://appinspect.splunk.com/v1/app/validate"